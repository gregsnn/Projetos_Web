{"ast":null,"code":"const API_KEY = \"48f6e1a83c41f806ee1e4dfe7234d545\";\nconst API_BASE = \"https://api.themoviedb.org/3\"; // precisa pegar***\n\n/*\n- originais netflix\n- recomendados (recommend)\n- em alta (trending)\n- ação\n- comédia\n- terror\n- romance\n- documentário\n*/\n\nconst basicFetch = async endpoint => {\n  const requisition = await fetch(`${API_BASE}${endpoint}`);\n  const json = await requisition.json();\n  return json;\n};\n\nexport default {\n  getHomeList: async () => {\n    return [{\n      slug: \"originals\",\n      title: \"Netflix Originals\",\n      items: await basicFetch(`/discover/tv?with_network=213&api_key=${API_KEY}`)\n    }, {\n      slug: \"trending\",\n      title: \"Recommend for you\",\n      items: await basicFetch(`/trending/movie/week?api_key=${API_KEY}`)\n    }, {\n      slug: \"top-rated\",\n      title: \"Top-Rated\",\n      items: await basicFetch(`/movie/top_rated?api_key=${API_KEY}`)\n    }, {\n      slug: \"action\",\n      title: \"Action\",\n      items: await basicFetch(`/discover/movie?with_genres=28&api_key=${API_KEY}`)\n    }, {\n      slug: \"comedy\",\n      title: \"Comedy\",\n      items: await basicFetch(`/discover/movie?with_genres=35&api_key=${API_KEY}`)\n    }, {\n      slug: \"horror\",\n      title: \"Horror\",\n      items: await basicFetch(`/discover/movie?with_genres=27&api_key=${API_KEY}`)\n    }, {\n      slug: \"romance\",\n      title: \"Romance\",\n      items: await basicFetch(`/discover/movie?with_genres=10749&api_key=${API_KEY}`)\n    }, {\n      slug: \"documentary\",\n      title: \"Documentary\",\n      items: await basicFetch(`/discover/movie?with_genres=99&api_key=${API_KEY}`)\n    }];\n  },\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n\n    if (movieId) {\n      switch (type) {\n        case \"movie\":\n          info = await basicFetch(`/movie/${movieId}?api_key=${API_KEY}`);\n          break;\n\n        case \"tv\":\n          info = await basicFetch(`/tv/${movieId}?api_key=${API_KEY}`);\n          break;\n\n        default:\n          info = null;\n      }\n    }\n\n    return info;\n  }\n};","map":{"version":3,"sources":["/home/gregsnn/Documents/VSCode/Github/personal-projects/Netflix-reactJS/src/Tmdb.js"],"names":["API_KEY","API_BASE","basicFetch","endpoint","requisition","fetch","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAhB;AACA,MAAMC,QAAQ,GAAG,8BAAjB,C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AACnC,QAAMC,WAAW,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,GAAEE,QAAS,EAAxB,CAA/B;AACA,QAAMG,IAAI,GAAG,MAAMF,WAAW,CAACE,IAAZ,EAAnB;AACA,SAAOA,IAAP;AACH,CAJD;;AAMA,eAAe;AACXC,EAAAA,WAAW,EAAE,YAAY;AACrB,WAAO,CACH;AACIC,MAAAA,IAAI,EAAE,WADV;AACuBC,MAAAA,KAAK,EAAE,mBAD9B;AACmDC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,yCAAwCF,OAAQ,EAAlD;AAD1E,KADG,EAIH;AACIQ,MAAAA,IAAI,EAAE,UADV;AACsBC,MAAAA,KAAK,EAAE,mBAD7B;AACkDC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,gCAA+BF,OAAQ,EAAzC;AADzE,KAJG,EAOH;AACIQ,MAAAA,IAAI,EAAE,WADV;AACuBC,MAAAA,KAAK,EAAE,WAD9B;AAC2CC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,4BAA2BF,OAAQ,EAArC;AADlE,KAPG,EAUH;AACIQ,MAAAA,IAAI,EAAE,QADV;AACoBC,MAAAA,KAAK,EAAE,QAD3B;AACqCC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,0CAAyCF,OAAQ,EAAnD;AAD5D,KAVG,EAaH;AACIQ,MAAAA,IAAI,EAAE,QADV;AACoBC,MAAAA,KAAK,EAAE,QAD3B;AACqCC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,0CAAyCF,OAAQ,EAAnD;AAD5D,KAbG,EAgBH;AACIQ,MAAAA,IAAI,EAAE,QADV;AACoBC,MAAAA,KAAK,EAAE,QAD3B;AACqCC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,0CAAyCF,OAAQ,EAAnD;AAD5D,KAhBG,EAmBH;AACIQ,MAAAA,IAAI,EAAE,SADV;AACqBC,MAAAA,KAAK,EAAE,SAD5B;AACuCC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,6CAA4CF,OAAQ,EAAtD;AAD9D,KAnBG,EAsBH;AACIQ,MAAAA,IAAI,EAAE,aADV;AACyBC,MAAAA,KAAK,EAAE,aADhC;AAC+CC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,0CAAyCF,OAAQ,EAAnD;AADtE,KAtBG,CAAP;AA0BH,GA5BU;AA8BXW,EAAAA,YAAY,EAAE,OAAOC,OAAP,EAAgBC,IAAhB,KAAyB;AACnC,QAAIC,IAAI,GAAG,EAAX;;AAEI,QAAGF,OAAH,EAAY;AACR,cAAOC,IAAP;AACI,aAAK,OAAL;AACIC,UAAAA,IAAI,GAAG,MAAMZ,UAAU,CAAE,UAASU,OAAQ,YAAWZ,OAAQ,EAAtC,CAAvB;AACJ;;AAEA,aAAK,IAAL;AACIc,UAAAA,IAAI,GAAG,MAAMZ,UAAU,CAAE,OAAMU,OAAQ,YAAWZ,OAAQ,EAAnC,CAAvB;AACJ;;AAEA;AACIc,UAAAA,IAAI,GAAG,IAAP;AAVR;AAYH;;AACD,WAAOA,IAAP;AACH;AAhDM,CAAf","sourcesContent":["const API_KEY = \"48f6e1a83c41f806ee1e4dfe7234d545\";\nconst API_BASE = \"https://api.themoviedb.org/3\";\n// precisa pegar***\n/*\n- originais netflix\n- recomendados (recommend)\n- em alta (trending)\n- ação\n- comédia\n- terror\n- romance\n- documentário\n*/\n\nconst basicFetch = async (endpoint) => {\n    const requisition = await fetch(`${API_BASE}${endpoint}`)\n    const json = await requisition.json()\n    return json\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: \"originals\", title: \"Netflix Originals\", items: await basicFetch(`/discover/tv?with_network=213&api_key=${API_KEY}`),\n            },\n            {\n                slug: \"trending\", title: \"Recommend for you\", items: await basicFetch(`/trending/movie/week?api_key=${API_KEY}`),\n            },\n            {\n                slug: \"top-rated\", title: \"Top-Rated\", items: await basicFetch(`/movie/top_rated?api_key=${API_KEY}`),\n            },\n            {\n                slug: \"action\", title: \"Action\", items: await basicFetch(`/discover/movie?with_genres=28&api_key=${API_KEY}`),\n            },\n            {\n                slug: \"comedy\", title: \"Comedy\", items: await basicFetch(`/discover/movie?with_genres=35&api_key=${API_KEY}`),\n            },\n            {\n                slug: \"horror\", title: \"Horror\", items: await basicFetch(`/discover/movie?with_genres=27&api_key=${API_KEY}`),\n            },\n            {\n                slug: \"romance\", title: \"Romance\", items: await basicFetch(`/discover/movie?with_genres=10749&api_key=${API_KEY}`),\n            },\n            {\n                slug: \"documentary\", title: \"Documentary\", items: await basicFetch(`/discover/movie?with_genres=99&api_key=${API_KEY}`)\n            }\n        ]\n    },\n\n    getMovieInfo: async (movieId, type) => {\n        let info = {}\n\n            if(movieId) {\n                switch(type) {\n                    case \"movie\":\n                        info = await basicFetch(`/movie/${movieId}?api_key=${API_KEY}`)\n                    break;\n\n                    case \"tv\":\n                        info = await basicFetch(`/tv/${movieId}?api_key=${API_KEY}`)\n                    break;\n\n                    default:\n                        info = null\n                }\n            }\n            return info\n        }\n    }"]},"metadata":{},"sourceType":"module"}